As classes de configuração de segurança serão distribuidas entre os micro serviços:

- WT-API-GATEWAY:
/config
- AppConfig
- ResourceServerConfig

- WT-OAUTH
/config
- AppConfig
- AuthorizationServerConfig
- SecurityConfig

A Service UserService do WT-OAUTH implementa a interface UserDetailsService e terá o método abaixo:

@Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {

        User userByLogin = repository.findByLogin(username);
        User userByEmail = repository.findByEmail(username);
        if(userByLogin == null && userByEmail == null) {
            logger.info("User not found: " + username);
            throw new UsernameNotFoundException("Usuário não localizado");
        }
        else {
            logger.info("User found: " + username);
            return (UserDetails) Objects.requireNonNullElse(userByLogin, userByEmail);
        }
    }


IMPORTANTE - Serviços prontos:

> Serviços no Docker
 - wt-eureka-server
 - wt-config-server


Containers do HR-Server - Curso microservices
54e6a442d12c 7476bf2e762a 32728ffd37aa 9f155a5e34ac 13f0728174be 4c361530311d f695e86184de a93b6baaecb1

> CONFIGURAÇÕES RETIRADAS DE SERVIÇOS EM REVISÃO
 1) Eureka Server
- retirado do pom.xml
<!--		<dependency>-->
<!--			<groupId>javax.xml.bind</groupId>-->
<!--			<artifactId>jaxb-api</artifactId>-->
<!--			<version>2.3.0</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.sun.xml.bind</groupId>-->
<!--			<artifactId>jaxb-core</artifactId>-->
<!--			<version>2.3.0</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.sun.xml.bind</groupId>-->
<!--			<artifactId>jaxb-impl</artifactId>-->
<!--			<version>2.3.0</version>-->
<!--		</dependency>-->

